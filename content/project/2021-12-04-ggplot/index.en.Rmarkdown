---
title: ggplot
author: twg
date: '2021-12-04'
slug: ggplot
categories:
  - dataviz
  - graphing
  - ggplot
tags:
  - DataViz
  - ggplot
subtitle: ''
summary: 'Code snippets for better ggplot graphics'
authors: []
lastmod: '2021-12-04T17:02:15-08:00'
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: yes
projects: []
toc: true
---


```{r , setup, include = FALSE}
library(here)
library(tidyverse)
library(rvest)

devtools::source_url("https://raw.githubusercontent.com/taylorgrant/sandbox/master/theme_twg.R")

```

## Creating my own theme

I've borrowed heavily from the `hrbrthemes` and `myriad` packages to create a clean theme. If I need to source it, it's available at github. 

```{r, eval= FALSE}

devtools::source_url("https://raw.githubusercontent.com/taylorgrant/sandbox/master/theme_twg.R")

```

## Adding text to barplots with position = "dodge"

With grouped bar charts `position = "dodge"` is used and the `geom_text` function also needs to be put into the same position. Note some other aesthetic changes here -- `coord_flip()` was used and within that the limits of the y-axis were extended (this is because `coord_cartesian()` doesn't work with the coordinates flipped). Within the `theme` section the title was centered, the axis labels were pushed to the edges and italicized, the caption font was altered. We also borrowed the `hrbrthemes` package function `scale_y_percent` to easily convert the axis to a percentage.  

```{r}
tibble(type = rep(c('a','b'), each = 4),
         cat = rep(c('cat', 'dog', 'bird', 'snake'),2),
         n = sample(1:500, 8)) %>%
  group_by(type) %>%
  mutate(frac = n/sum(n)) %>%
  ggplot(aes(x = cat, y = frac, group = type, 
             fill = type, label = scales::percent(frac))) + 
  geom_bar(stat = "identity", position = "dodge") + 
  coord_flip(ylim = c(0,.6)) + 
  theme_twg() + 
  hrbrthemes::scale_y_percent() + 
  geom_text(aes(x = cat, y = frac+.04, 
                label = scales::percent(frac)),
            position = position_dodge(1),
            size = 3.5) +
  scale_fill_manual(values = c("#154577", "#999999"), name = "") + 
  theme(legend.position = "right",
              plot.title = element_text(hjust = .5),
              axis.title.x = element_text(hjust = 1, face = "italic", size = 8),
              axis.title.y = element_text(hjust = 1, face = 'italic', size = 8),
              plot.caption = element_text(color = "#303030", face = "italic")) + 
  labs(x = "Some Thing", y = "Percent",
       title = "Title of Graph",
       caption = "Source: data source")

```

## Faceting pie charts and donut plots 

Of course no one likes pie charts, but occasionally someone wants one. A single pie chart is simple to make in ggplot (see [here](http://www.sthda.com/english/wiki/ggplot2-pie-chart-quick-start-guide-r-software-and-data-visualization){target="_blank"}), but what if you want to facet your pie charts? 

This was the old way of having to make pie charts with ggplot and it still works really well. Since we applied `theme_minimal()` to everything, we have to go back in and recolor the facet labels within the theme.

```{r}
tibble(type = rep(c('a','b', 'c'), each = 4),
         cat = rep(c('cat', 'dog', 'bird', 'snake'),3),
         n = sample(1:500, 12)) %>%
  group_by(type) %>%
  mutate(frac = n/sum(n),
         ymax = cumsum(frac),
         ymin = c(0, head(ymax, n = -1))) %>%
  ggplot(aes(fill = factor(cat), ymax = ymax, ymin = ymin, 
             xmax = 8, xmin = 6)) +
  facet_wrap(~type, ncol = 3) + geom_rect(colour = "white", show.legend = TRUE) +
  coord_polar(theta = "y") + theme_minimal() + 
  scale_fill_manual(values = c("#154577", "#999999", '#fccd22','#0c725a'),
                    labels = c("Cat", "Dog", 'Bird', "Snake"),
                    name = "") + 
  theme(legend.position = "bottom",
        panel.grid=element_blank(),
        axis.text=element_blank(),
        axis.ticks=element_blank(),
        plot.title = element_text(hjust = 1),
        strip.background =element_rect(fill="lightgray", color = NA)) + 
  labs(x = "x-axis label", y = "y-axis label",
       title = "Title over a row of faceted pie charts")
```
